# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  batch-protein-folding-cfn-root.yaml: Root stack for installing the Guidance for Protein Folding on AWS (SO9164).

Parameters:
  ApplicationName:
    Type: String
    Default: BatchProteinFolding
  LaunchSageMakerNotebook:
    Type: String
    Default: Y
    Description: Create a SageMaker Notebook Instance.
    AllowedValues: [Y, N]          
  VPC:
    Description: (Optional) ID of VPC to use. If left empty, a new VPC will be created.
    Type: String
    Default: ""     
  Subnet:
    Description: (Optional) ID of private subnet to use. If left empty, a new VPC will be created.
    Type: String
    Default: ""     
  DefaultSecurityGroup:
    Description: (Optional) ID of security group to use. If left empty, a new VPC will be created.
    Type: String
    Default: ""
  FileSystemId:
    Description: (Optional) ID of FSX for Lustre  to use. If left empty, a new FSx for Lustre instance will be created.
    Type: String
    Default: ""
  FileSystemMountName:
    Description: (Optional) Mount name of FSX for Lustre to use. If left empty, a new FSx for Lustre instance will be created.
    Type: String
    Default: ""    
  DownloadFsxData:
    Description: Automatically populate FSx for Lustre file system with model parameters and sequence databases?
    Type: String
    Default: "N"
    AllowedValues: [Y, N]
  CreateG5ComputeEnvironment:
    Description: Create a compute environment for G5 instance types? Note that availabilty is region-specific
    Type: String
    Default: "N"
    AllowedValues: [Y, N]    
  MultiAZ:
    Description: Use multiple availability zones?
    Type: String
    Default: "N"
    AllowedValues: [Y, N]
  CreateP4dComputeEnvironment:
    Description: Create a compute environment for p4d.24xlarge instance types? Note that availabilty is region-specific
    Type: String
    Default: "N"
    AllowedValues: [Y, N]     
  CodeRepoS3BucketName:
    Description: S3 Bucket Name to retrieve code .zip
    Type: String    
    Default: "archon-iac"
  Timestamp:
    Description: Timestamp for the cfn deployment
    Type: Number
    Default: 9999999999    

Conditions:
  CreateFileSystem:
    "Fn::Or":
      [
        "Fn::Equals": [Ref: FileSystemId, ""],
        "Fn::Equals": [Ref: FileSystemMountName, ""],
        "Fn::Equals": [Ref: VPC, ""],
        "Fn::Equals": [Ref: DefaultSecurityGroup, ""],
        "Fn::Equals": [Ref: Subnet, ""],
      ]
  CreateNetwork:
    "Fn::Or":
      [
        "Fn::Equals": [Ref: VPC, ""],
        "Fn::Equals": [Ref: DefaultSecurityGroup, ""],
        "Fn::Equals": [Ref: Subnet, ""],
      ]
  CreateSageMakerNotebook:
    "Fn::Equals": [Ref: "LaunchSageMakerNotebook", "Y"]
  DownloadFsxDataCondition:
    "Fn::Equals": [Ref: "DownloadFsxData", "Y"] 

Resources:

  ##################################################
  # S3
  ##################################################

  BatchFoldS3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        LogFilePrefix: code-pipeline-logs
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref AWS::StackId

  S3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref BatchFoldS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource:
              - !Sub ${BatchFoldS3Bucket.Arn}/*
            Principal:
              AWS: !Ref AWS::AccountId
          - Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:PutBucketPolicy
            Effect: Allow
            Resource:
              - !GetAtt BatchFoldS3Bucket.Arn
            Principal:
              AWS: !Ref AWS::AccountId

  Network:
    Type: "AWS::CloudFormation::Stack"
    Condition: CreateNetwork
    Properties:
      TemplateURL: batch-protein-folding-cfn-network.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        MultiAZ:
          Ref: MultiAZ

  FileSystem:
    Type: "AWS::CloudFormation::Stack"
    Condition: CreateFileSystem
    Properties:
      TemplateURL: batch-protein-folding-cfn-fsx-lustre.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        DefaultSecurityGroup:
          "Fn::If":
            - CreateNetwork
            - "Fn::GetAtt": Network.Outputs.DefaultSecurityGroup
            - Ref: DefaultSecurityGroup
        FSXForLustreStorageCapacity: 1200
        FSxForLustreThroughput: 125
        Subnet:
          "Fn::If":
            - CreateNetwork
            - !Select [0, !Split [",", !GetAtt Network.Outputs.PrivateSubnets]]
            - Ref: Subnet
        S3BucketName:
          Ref: BatchFoldS3Bucket

  Container:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-container.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName     
        DownloadFsxData:
          Ref: DownloadFsxData
        S3BucketARN:
          "Fn::GetAtt": BatchFoldS3Bucket.Arn        
        CodeRepoS3BucketName:
          !Ref CodeRepoS3BucketName
        Timestamp:
          !Ref Timestamp

  BatchEnvironment:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-batch.yaml
      Parameters:
        CreateG5ComputeEnvironment:
          Ref: CreateG5ComputeEnvironment
        CreateP4dComputeEnvironment:
          Ref: CreateP4dComputeEnvironment          
        ApplicationName:
          Ref: ApplicationName
        Subnets:
          "Fn::If":
            - CreateNetwork
            - !GetAtt Network.Outputs.PrivateSubnets
            - Ref: Subnet
        DefaultSecurityGroupID:
          "Fn::If":
            - CreateNetwork
            - "Fn::GetAtt": Network.Outputs.DefaultSecurityGroup
            - Ref: DefaultSecurityGroup
        FileSystemId:
          "Fn::If":
            - CreateFileSystem
            - "Fn::GetAtt": FileSystem.Outputs.FileSystemId
            - Ref: FileSystemId
        FileSystemMountName:
          "Fn::If":
            - CreateFileSystem
            - "Fn::GetAtt": FileSystem.Outputs.FileSystemMountName
            - Ref: FileSystemMountName
        DownloadContainerRegistryURI:
          "Fn::GetAtt": Container.Outputs.DownloadContainerRegistryURI
        S3BucketName:
          Ref: BatchFoldS3Bucket    
        CreateAWSServiceRoleForEC2Spot: GetAWSServiceRoleForEC2Spot.role_exists
        CreateAWSServiceRoleForEC2SpotFleet: GetAWSServiceRoleForEC2SpotFleet.role_exists


  Notebook:
    Type: "AWS::CloudFormation::Stack"
    Condition: CreateSageMakerNotebook
    Properties:
      TemplateURL: batch-protein-folding-cfn-notebook.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        Subnet:
          "Fn::If":
            - CreateNetwork
            - !Select [0, !Split [",", !GetAtt Network.Outputs.PrivateSubnets]]
            - Ref: Subnet
        DefaultSecurityGroupID:
          "Fn::If":
            - CreateNetwork
            - "Fn::GetAtt": Network.Outputs.DefaultSecurityGroup
            - Ref: DefaultSecurityGroup
        CodeRepositoryURI:
          "Fn::GetAtt": Container.Outputs.CodeRepositoryURI    
        S3BucketName:
          Ref: BatchFoldS3Bucket

  DownloadData:
    Type: "AWS::CloudFormation::Stack"
    DependsOn:
      - BatchEnvironment
    Condition: DownloadFsxDataCondition
    Properties:
      TemplateURL: batch-protein-folding-cfn-download.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        DownloadJobQueue:
          "Fn::GetAtt": BatchEnvironment.Outputs.CPUOnDemandJobQueue
        JobDefinition:
          "Fn::GetAtt": BatchEnvironment.Outputs.DownloadJobDefinition       

  ####################################################################################################
  # Custom Resources
  ####################################################################################################

  GetServiceRoleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: GetIamRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - iam:GetRole
              Resource: 
                - Fn::Sub: "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  GetServiceRoleLambda:
    Type: AWS::Lambda::Function
    Properties:
#      ReservedConcurrentExecutions: 2
#      ReservedConcurrentExecutions: 0
      Code:
        ZipFile: |
          import logging          
          import cfnresponse
          import boto3
          LOGGER = logging.getLogger()
          LOGGER.setLevel(logging.INFO)
          def lambda_handler(event, context):
              LOGGER.info(event)
              try:
                  LOGGER.info("REQUEST RECEIVED:\n %s", event)
                  LOGGER.info("REQUEST RECEIVED:\n %s", context)
                  if event["RequestType"] == "Create":
                      LOGGER.info("CREATE!")
                      iam = boto3.client("iam")
                      role_name = event["ResourceProperties"]["RoleName"]
                      try:
                          function_response = iam.get_role(RoleName=role_name)
                          LOGGER.info(f"Function response:\n{function_response}")
                          cfnresponse.send(event, context, cfnresponse.SUCCESS, {"role_exists":"Y"})
                      except Exception as e:
                          LOGGER.info(e)
                          cfnresponse.send(event, context, cfnresponse.SUCCESS, {"role_exists":"N"})
                  elif event["RequestType"] == "Update":
                      LOGGER.info("UPDATE!")
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {"response":"Resource update successful!"})
                  elif event["RequestType"] == "Delete":
                      LOGGER.info("DELETE!")
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {"response":"Resource deletion successful!"})
                  else:
                      LOGGER.info("FAILED!")
                      cfnresponse.send(event, context, cfnresponse.FAILED, {"response":"Unexpected event received from CloudFormation"})
              except Exception as e:
                  LOGGER.info("FAILED!")
                  LOGGER.info(e)
                  cfnresponse.send(event, context, cfnresponse.FAILED, {"response":"Exception during processing"})

      Description: Get Status of Service Linked Roles
      Handler: index.lambda_handler
      MemorySize: 512
      Role:
        Fn::GetAtt: GetServiceRoleRole.Arn
      Runtime: python3.10
      Timeout: 10     
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackId
          Value: !Ref "AWS::StackId"
        - Key: SolutionId
          Value: SO9164

  GetAWSServiceRoleForEC2Spot:
    Type: Custom::GetAWSServiceRole
    Properties:
      ServiceToken:
        Fn::GetAtt: GetServiceRoleLambda.Arn
      RoleName: "AWSServiceRoleForEC2Spot"

  GetAWSServiceRoleForEC2SpotFleet:
    Type: Custom::GetAWSServiceRole
    Properties:
      ServiceToken:
        Fn::GetAtt: GetServiceRoleLambda.Arn
      RoleName: "AWSServiceRoleForEC2SpotFleet"            

#################################################################################
# Modules
#################################################################################

  ModuleAlphaFold2:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-module-alphafold2.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        CodeRepositoryUrl:
            "Fn::GetAtt": Container.Outputs.CodeRepositoryURI
        CodeBuildEncryptionKey:
            "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
        CodeBuildRoleArn:
            "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
        StartCodeBuildLambdaArn:
            "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn
        DeleteContainerRepoLambdaArn:
            "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn
        Timestamp:
          Ref: Timestamp

  # ModuleOpenFold:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-openfold.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn          
  #       Timestamp:
  #         Ref: Timestamp

  # ModuleJackhmmer:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-jackhmmer.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn      
  #       Timestamp:
  #         Ref: Timestamp

  # ModuleOmegaFold:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-omegafold.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
  #       Timestamp:
  #         Ref: Timestamp

  # ModuleRFDesign:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-rfdesign.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
  #       Timestamp:
  #         Ref: Timestamp

  # ModuleESMFold:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-esmfold.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
  #       Timestamp:
  #         Ref: Timestamp

  ModuleProteinMPNN:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-module-proteinmpnn.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        CodeRepositoryUrl:
            "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
        CodeBuildEncryptionKey:
            "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
        CodeBuildRoleArn:
            "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
        StartCodeBuildLambdaArn:
            "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
        DeleteContainerRepoLambdaArn:
            "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn
        Timestamp:
          Ref: Timestamp

  # ModuleNextflow:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-nextflow.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
  #       Timestamp:
  #         Ref: Timestamp

  # ModuleDiffDock:
  #   Type: "AWS::CloudFormation::Stack"
  #   Properties:
  #     TemplateURL: batch-protein-folding-cfn-module-diffdock.yaml
  #     Parameters:
  #       ApplicationName:
  #         Ref: ApplicationName
  #       CodeRepositoryUrl:
  #           "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
  #       CodeBuildEncryptionKey:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
  #       CodeBuildRoleArn:
  #           "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
  #       StartCodeBuildLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
  #       DeleteContainerRepoLambdaArn:
  #           "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn                   
  #       Timestamp:
  #         Ref: Timestamp

  ModuleRFDiffusion:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-module-rfdiffusion.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        CodeRepositoryUrl:
            "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
        CodeBuildEncryptionKey:
            "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
        CodeBuildRoleArn:
            "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
        StartCodeBuildLambdaArn:
            "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
        DeleteContainerRepoLambdaArn:
            "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
        Timestamp:
          Ref: Timestamp

  ModuleSuperfold:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: batch-protein-folding-cfn-module-superfold.yaml
      Parameters:
        ApplicationName:
          Ref: ApplicationName
        CodeRepositoryUrl:
            "Fn::GetAtt": Container.Outputs.CodeRepositoryURI          
        CodeBuildEncryptionKey:
            "Fn::GetAtt": Container.Outputs.CodeBuildEncryptionKey      
        CodeBuildRoleArn:
            "Fn::GetAtt": Container.Outputs.CodeBuildRoleArn
        StartCodeBuildLambdaArn:
            "Fn::GetAtt": Container.Outputs.StartCodeBuildLambdaArn            
        DeleteContainerRepoLambdaArn:
            "Fn::GetAtt": Container.Outputs.DeleteContainerRepoLambdaArn   
        Timestamp:
          Ref: Timestamp

Outputs:
  ApplicationName:
    Description: Name of the application
    Value:
      Ref: ApplicationName
  AlphaFold2ContainerURI:
    Description: ECR URI for AlphaFold2 container image.
    Value:
      "Fn::GetAtt": ModuleAlphaFold2.Outputs.AlphaFold2ContainerURI
  # DiffDockContainerURI:
  #   Description: ECR URI for DiffDock container image.
  #   Value:
  #     "Fn::GetAtt": ModuleDiffDock.Outputs.DiffDockContainerURI
  # ESMFoldContainerURI:
  #   Description: ECR URI for ESMFold container image.
  #   Value:
  #     "Fn::GetAtt": ModuleESMFold.Outputs.ESMFoldContainerURI
  # JackhmmerContainerURI:
  #   Description: ECR URI for Jackhmmer container image.
  #   Value:
  #     "Fn::GetAtt": ModuleJackhmmer.Outputs.JackhmmerContainerURI
  # OmegaFoldContainerURI:
  #   Description: ECR URI for OmegaFold container image.
  #   Value:
  #     "Fn::GetAtt": ModuleOmegaFold.Outputs.OmegaFoldContainerURI
  ProteinMPNNContainerURI:
    Description: ECR URI for ProteinMPNN container image.
    Value:
      "Fn::GetAtt": ModuleProteinMPNN.Outputs.ProteinMPNNContainerURI
  # RFDesignContainerURI:
  #   Description: ECR URI for RFDesign container image.
  #   Value:
  #     "Fn::GetAtt": ModuleRFDesign.Outputs.RFDesignContainerURI
  # OpenFoldContainerURI:
  #   Description: ECR URI for OpenFold container image.
  #   Value:
  #     "Fn::GetAtt": ModuleOpenFold.Outputs.OpenFoldContainerURI
  